const Instructor = require('../models/instructorModel')
const Course = require('../models/courseModel')
const mongoose = require('mongoose')

const createCourse = async (req,res) => {
    const{ InstructorId } = req.params
    const {Title,Subject,Hours} = req.body
    try{
        const course = await Course.create({Title,Subject,Hours,InstructorId})
        res.status(200).json(course)
  } catch (error) {
      res.status(400).json({error: error.message})
  }
}

const getCourse = async (req,res) => {
    const{ id } = req.params
    if(!mongoose.Types.ObjectId.isValid(id)){
        return res.status(404).json({error: 'invalid input'})
    }
    const myJSON = req.body
    //const myObj = JSON.parse(myJSON)
    let filter = ""
    //const flag = Object.values(myJSON).includes("Title")
    if (Object.values(myJSON).includes("Subject"))
        filter = "Subject"
    else if (Object.values(myJSON).includes("Price"))
        filter = "Price"
    else if (myJSON.hasOwnProperty('Title'))
        filter = "Title"
    
    let key = Object.values(myJSON)[0]
    console.log(filter)
    console.log("" +key)

    const course = await Course.find({Title:"CSEN202"})
    if(!course){
        return res.status(404).json({error: 'no such course'})
    }
    res.status(200).json(course)
}
/*
const getCourses1 = async (req,res) => {
    const{ id } = req.params
    if(!mongoose.Types.ObjectId.isValid(id)){
        return res.status(404).json({error: 'invalid input'})
    }
    const myJSON = req.body
    const myObj = JSON.parse(myJSON)

    const course = await Course.find({InstructorId:id}).select({Title: 1})
    if(!course){
        return res.status(404).json({error: 'no such course'})
    }
    res.status(200).json(course)
}

*/

module.exports = {
    createCourse,
    getCourse
}
